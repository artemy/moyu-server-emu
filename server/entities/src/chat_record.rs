//! `SeaORM` Entity. Generated by sea-orm-codegen 0.12.14

use sea_orm::entity::prelude::*;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq)]
#[sea_orm(table_name = "chat_record")]
pub struct Model {
    #[sea_orm(primary_key)]
    pub id: i64,
    pub created: DateTimeWithTimeZone,
    pub from: String,
    pub to: String,
    pub from_text: String,
    pub to_text: String,
    pub is_myself: bool,
    pub device_id: i64,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(
        belongs_to = "super::device_data::Entity",
        from = "Column::DeviceId",
        to = "super::device_data::Column::Id",
        on_update = "NoAction",
        on_delete = "NoAction"
    )]
    DeviceData,
}

impl Related<super::device_data::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::DeviceData.def()
    }
}

impl ActiveModelBehavior for ActiveModel {}
